package day12.java;

/**
 * 方法的重写(override/overwrite)
 * <p>
 * 1.重写：子类继承父类以后，可对父类同名参数的方法进行覆盖操作
 * <p>
 * 2.重写以后，当创建子类对象以后，通过子类对象调用父类中的同名同参数的方法时，实际执行的是子类重写父类的方法。
 * <p>
 * 3.重写的规定
 * 方法的声明：权限修饰符 返回值类型 方法名（形参列表） throws 异常类型{
 * //方法体
 * }
 * 约定俗成：子类中叫重写的方法，父类中叫被重写的方法
 * ①子类中重写的方法的方法名和形参列表和父类中被重写的方法的方法名和形参列表相同
 * ②子类重写方法的权限修饰符是可以比父类中的被重写方法的权限修饰符要大的，也可以相等
 * >特殊情况：子类不能重写父类中权限修饰符为private的方法（因为太小了，子类看不见）
 * ②返回值类型
 * >父类被重写的方法的返回值类型是void，则子类重写的返回值类型也是void
 * >父类被重写的返回值类型是A类型，则子类重写的返回值类型是A类或A类的子类
 * >父类被重写的返回值类型是基本数据类型（比如：double），则子类重写的返回值类型也必须是基本数据类型（double).
 * ④子类重写的方法抛出的异常类型不大于父类重写的方法抛出的异常类型
 * *************************************************************************************************************
 * 子类和父类的同名同参数的方法要么都声明为非static的（不是重写）。
 * <p>
 * *面试题：区分方法的重写与重载
 * 重载的特点：
 * 与返回值类型无关，只看参数列表，且参数列表必须不同。(参数个数或参数类 型)。调用时，根据方法参数列表的不同来区别。
 * 重写的特点：
 * 1.子类重写的方法必须和父类被重写的方法具有相同的方法名称、参数列表 。
 * 2.子类重写的方法的返回值类型不能大于父类被重写的方法的返回值类型 （返回类型为类）。
 * 3.子类重写的方法使用的访问权限不能小于父类被重写的方法的访问权限 。
 * 4.子类不能重写父类中声明为private权限的方法 。
 * 5.子类方法抛出的异常不能大于父类被重写方法的异常 （父类异常的子类）。
 */
public class PerosnTest {
    public static void main(String[] args) {
        Student student = new Student("计算机科学与技术");
        student.eat();
        student.study();
        student.walk(10);
    }
}
